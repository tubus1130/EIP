### SECTION 001 ###
1. 소프트웨어 생명 주기
- 소프트웨어를 개발하기 위한 과정을 각 단계별로 나눈 것

2. 폭포수 모형
- 각 단계를 확실히 매듭짓고 그 결과를 검토하여 승인과정을 거친 후에 다음단계를 진행하는 개발 방법론

3. 프로토타입 모형
- 실제 개발될 소프트웨어 견본품을 만들어 최종 결과물을 예측하는 모형

4. 나선형 모형
- 여러 번의 소프트웨어 개발 과정을 거쳐 점진적으로 개발하는 모형

5. 애자일 모형
- 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하면서 개발하는 모형

6. 소프트웨어공학
- 소프트웨어의 위기를 극복하기 위한 방안으로 연구된 학문

### SECTION 002 ###
1. 스크럼
- 팀이 중심이 되어 개발의 효율성을 높이는 기법

### SECTION 003 ###
1. XP(eXtreme Programming)
- 요구사항에 유연하게 대응하기 위해 고객의 참여와 개발과정의 반복을 극대화하여 생산성을 향상시키는 방법

### SECTION 004 ###
1. 운영체제(OS)
- 컴퓨터 시스템의 자원을 효율적으로 관리하며, 컴퓨터를 편리하고 효율적으로 사용할 수 있도록 환경을 제공하는 소프트웨어

2. 데이터베이스관리시스템(DBMS)
- 사용자와 데이터베이스 사이에서 정보를 생성해 주고, 데이터베이스를 관리해 주는 소프트웨어

3. 웹 어플리케이션 서버(WAS)
- 동적인 콘텐츠를 처리하기 위해 사용되는 미들웨어

4. 오픈소스
- 제한 없이 사용할 수 있도록 소스 코드를 공개한 소프트웨어

### SECTION 005 ###
1. 요구사항
- 소프트웨어가 어떤 문제를 해결하기 위해 제공하는 서비스에 대한 설명과 운영되는데 필요한 제약조건

2. 기능 요구사항
- 기능이나 수행과 관련된 요구사항

3. 비기능 요구사항
- 품질이나 제약사항과 관련된 요구사항

4. 사용자 요구사항
- 사용자 관점에서 본 시스템이 제공해야 할 요구사항

5. 시스템 요구사항
- 개발자 관점에서 본 시스템 전체가 제공해야 할 요구사항

### SECTION 006 ###
1. 요구사항 개발 프로세스
- 요구사항을 도출하고 분석한 후 명세서에 정리한 다음 확인 및 검증하는 활동

2. 요구사항 도출
- 시스템 개발에 관련된 사람들이 서로 의견을 교환하여 요구사항을 식별하고 이해하는 과정

3. 요구사항 분석
- 요구사항 중 이해되지 않는 부분을 걸러내기 위한 과정

4. 요구사항 명세
- 분석된 요구사항을 바탕으로 모델을 작성하고 문서화하는 것

5. 요구사항 확인
- 요구사항 명세서가 정확하고 완전하게 작성되었는지를 검토하는 활동

6. 요구공학
- 요구사항을 정의하고, 분석 및 관리하는 프로세스를 연구하는 학문

### SECTION 007 ###
1. 요구사항 분석
- 개발 대상에 대한 사용자의 요구사항을 이해하고 문서화하는 활동

2. 구조적 분석 기법
- 자료의 흐름과 처리를 중심으로 하는 요구사항 분석 방법

3. 자료 흐름도(DFD)
- 자료의 흐름 및 변환 과정과 기능을 도형 중심으로 기술하는 방법

4. 자료사전(DD)
- 자료 흐름도에 있는 자료를 정의하고 기록한 것

### SECTION 008 ###
1. 요구사항 분석용 CASE(자동화 도구)
- 요구사항을 자동으로 분석하고, 요구사항 분석 명세서를 기술하도록 개발된 도구

2. HIPO(Hierarchy Input Process Output)
- 시스템 실행과정인 입력/처리/출력의 기능을 표현한 것

### SECTION 009 ###
1. UML(Unified Modeling Language)
- 시스템 개발 과정에서 의사소통이 원활하게 이루어지도록 표준화한 대표적인 객체지향 모델링 언어

2. 사물(Things)
- 다이어그램 안에서 관계가 형성될 수 있는 대상들
