### SECTION 091 ###
1. 애플리케이션 테스트
- 애플리케이션에 잠재되어 있는 결함을 찾아내는 일련의 행위 또는 절차

### SECTION 093 ###
1. 화이트박스 테스트
- 원시 코드의 논리적인 모든경로를 테스트하여 테스트 케이스를 설계하는 방법

2. 블랙박스 테스트
- 각 기능이 완전히 작동되는 것을 입증하는 테스트

### SECTION 094 ###
1. 단위 테스트
- 모듈이나 컴포넌트에 초점을 맞춰 테스트

2. 통합 테스트
- 단위 테스트가 완료된 모듈들을 결합하여 하나의 시스템으로 완성시키는 과정에서의 테스트

3. 시스템 테스트
- 개발된 소프트웨어가 완벽하게 수행되는가를 점검하는 테스트

4. 인수 테스트
- 사용자의 요구사항을 충족하는지에 중점을 두고 테스트

### SECTION 095 ###
1. 통합 테스트
- 단위 테스트가 끝난 모듈들을 통합하는 과정에서 발생하는 오류 및 결함을 찾는 테스트

2. 하향식 통합 테스트
- 상위 모듈에서 하위 모듈 방향으로 통합하면서 테스트

3. 상향식 통합 테스트
- 하위 모듈에서 상위 모듈 방향으로 통합하면서 테스트

4. 혼합식 통합 테스트
- 하위 수준에서는 상향식 통합, 상위 수준에서는 하향식 통합을 사용하여 최적의 테스트를 지원하는 방식

5. 회귀 테스팅
- 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

### SECTION 096 ###
1. 테스트 케이스
- 사용자의 요구사항을 정확하게 준수했는지를 확인하기 위해 설계된 테스트 항목에 대한 명세서

2. 테스트 시나리오
- 테스트 케이스를 적용하는 순서에 따라 여러 개의 테스트 케이스를 묶은 집합

3. 테스트 오라클
- 테스트 결과가 올바른지 판단하기 위해 사전에 정의된 참 값을 대입하여 비교하는 기법

### SECTION 097 ###
1. 정적 분석 도구
- 프로그램을 실행하지 않고 분석하는 도구

2. 테스트 실행 도구
- 스크립트 언어를 사용하여 테스트를 실행하는 도구

3. 성능 테스트 도구
- 가상의 사용자를 만들어 테스트를 수행함으로써 성능의 목표달성 여부를 확인하는 도구

4. 테스트 통제 도구
- 테스트 계획 및 관리, 테스트 수행, 결함 관리 등을 수행

5. 테스트 하네스 도구
- 테스트가 실행될 환경을 시뮬레이션하여 컴포넌트 및 모듈이 정상적으로 테스트되도록 하는 도구

### SECTION 098 ###
1. 결함
- 소프트웨어가 개발자가 설계한 것과 다르게 동작하거나 다른 결과가 발생하는 것

2. 결함 심각도
- 애플리케이션에 발생한 결함이 전체 시스템에 미치는 치명도를 나타내는 척도

### SECTION 099 ###
1. 애플리케이션 성능
- 최소한의 자원을 사용하여 최대한 많은 기능을 신속하게 처리하는 정도

2. 성능 테스트 도구
- 부하나 스트레스를 가하면서 애플리케이션의 성능 측정 지표를 점검하는 도구

3. 시스템 모니터링 도구
- 애플리케이션이 실행되었을 때 시스템 자원의 사용량을 확인하고 분석하는 도구

### SECTION 100 ###
1. 시간복잡도
- 알고리즘을 수행하기 위해 프로세스가 수행하는 연산 횟수를 수치화한 것

2. 순환복잡도
- 논리적인 복잡도를 측정하기 위한 소프트웨어의 척도

### SECTION 101 ###
1. 소스 코드 최적화
- 나쁜 코드를 배제하고, 클린 코드로 작성하는 것
